
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mehedi
 */
public class Staticshome extends javax.swing.JFrame {

     Connection con;
    ResultSet rs;
    Statement st;
    PreparedStatement pst;
    public Staticshome() {
        super("statistics");
        initComponents();
        con = JavaConnect.connectdb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 102, 102)), "Opreation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(51, 0, 102))); // NOI18N

        jButton2.setText("AvailableBookspdf");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("IssuedDetails");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setText("Avaiablebooks_chart");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("IssueDetailsChart");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("ShowPdf");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Back");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(223, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            rs = st.executeQuery("SELECT * FROM newbook");
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Data Structure'");
            rs.next();
            int data = rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Computer Science'");
            rs.next();
            int CSE=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Mathmatics'");
            rs.next();
            int math=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Solid State Physics'");
            rs.next();
            int ssp=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Cmputer Hardware'");
            rs.next();
            int hardware = rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Networking'");
            rs.next();
            int networking=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Artificial Intelligence'");
            rs.next();
            int ai=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Chemistry'");
            rs.next();
            int che=rs.getInt(1);
            double all=data+CSE+math+ssp+hardware+networking+ai+che;
            double dat=data/all;
            double cs=CSE/all;
            double mat=math/all;
            double ss=ssp/all;
            double hard=hardware/all;
            double net=networking/all;
            double Ai=ai/all;
            double ch=che/all;
            
            
             DefaultPieDataset pieDataset=new DefaultPieDataset();
             if(data>0){
        pieDataset.setValue("Data Structure", data);
             }
             if(hardware>0){
        pieDataset.setValue("Computer hardware",hardware);
             }
             if(math>0){
        pieDataset.setValue("MathMatics", math);
             }
             if(ssp>0){
        pieDataset.setValue("Solid State Physics",ssp);
             }
             if(CSE>0){
        pieDataset.setValue("Computer Science", CSE);
             }
             if(networking>0)
             {
        pieDataset.setValue("Computer Networking", networking);
             }
             if(ai>0)
             {
        pieDataset.setValue("Artificial Intellegence",ai);
             }
             if(che>0){
        pieDataset.setValue("Chemistry", che);
             }
        JFreeChart chart=ChartFactory.createPieChart("pie chat", pieDataset,true, true, true);
        chart.setBorderPaint(Color.cyan);
        PiePlot p=(PiePlot)chart.getPlot();
        ChartFrame frame=new ChartFrame("pie chart",chart);
        frame.setVisible(true);
        frame.setSize(900,660);
            rs.close();
            st.close();
            //con.close();
        } catch (SQLException ex) {
            //Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
        Hellk.genarate_pdf();
        }
        catch(Exception ex)
        {
            
        }
        try
        {
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"D:\\Collection_Exercise\\book.pdf");
        }
        catch(Exception e)
        {
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try{
        st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            rs = st.executeQuery("SELECT * FROM newbook");
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Data Structure'");
            rs.next();
            int data = rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Computer Science'");
            rs.next();
            int CSE=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Mathmatics'");
            rs.next();
            int math=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Solid State Physics'");
            System.out.println(math);
            rs.next();
            int ssp=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Cmputer Hardware'");
            rs.next();
            int hardware = rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Networking'");
            rs.next();
            int networking=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Artificial Intelligence'");
            rs.next();
            int ai=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM newbook where category='Chemistry'");
            rs.next();
            int che=rs.getInt(1);
           // double all=data+CSE+math+ssp+hardware+networking+ai+che;
            //double dat=data/all;
            //double cs=CSE/all;
            //double mat=math/all;
            //double ss=ssp/all;
            //double hard=hardware/all;
            //double net=networking/all;
            //double Ai=ai/all;
            //double ch=che/all;
            
            
        DefaultCategoryDataset pieDataset=new DefaultCategoryDataset();
        
        pieDataset.setValue(data, "Books","Data Structure");
        pieDataset.setValue(hardware,"Books","Computer hardware");
        pieDataset.setValue(math,"Books","Mathmatics");
        pieDataset.setValue(ssp,"Books","Physics");
        pieDataset.setValue(CSE,"Books","Computer Science");
        pieDataset.setValue(networking,"BOOKS","Computer Networking");
        pieDataset.setValue(ai,"Books","Artificial Intellegence");
        pieDataset.setValue(che,"Books","Chemistry");
        JFreeChart chart=ChartFactory.createBarChart("Avaiable Books","Book Type","Number",pieDataset,PlotOrientation.VERTICAL, false,true,false);
        CategoryPlot p=(CategoryPlot)chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLACK);
        ChartFrame frame=new ChartFrame("pie chart",chart);
        //p.setRangeGridlinePaint(Color.BLACK);
        frame.setVisible(true);
        frame.setSize(500,660);
            rs.close();
            st.close();
           // con.close();
             } catch (SQLException ex) {
           // Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try{
        st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            rs = st.executeQuery("SELECT * FROM issuedbook");
            rs = st.executeQuery("SELECT count(category) FROM issuedbook where category='Data Structure'");
            rs.next();
            int data = rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM issuedbook where category='Computer Science'");
            rs.next();
            int CSE=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM issuedbook where category='Mathmatics'");
            rs.next();
            int math=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM issuedbook where category='Solid State Physics'");
            rs.next();
            int ssp=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM issuedbook where category='Cmputer Hardware'");
            rs.next();
            int hardware = rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM issuedbook where category='Networking'");
            rs.next();
            int networking=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM issuedbook where category='Artificial Intelligence'");
            rs.next();
            int ai=rs.getInt(1);
            rs = st.executeQuery("SELECT count(category) FROM issuedbook where category='Chemistry'");
            rs.next();
            int che=rs.getInt(1);
            double all=data+CSE+math+ssp+hardware+networking+ai+che;
            double dat=data/all;
            double cs=CSE/all;
            double mat=math/all;
            double ss=ssp/all;
            double hard=hardware/all;
            double net=networking/all;
            double Ai=ai/all;
            double ch=che/all;
            
            
             DefaultPieDataset pieDataset=new DefaultPieDataset();
             if(data>0){
        pieDataset.setValue("Data Structure", data);
             }
             if(hardware>0){
        pieDataset.setValue("Computer hardware",hardware);
             }
             if(math>0){
        pieDataset.setValue("MathMatics", math);
             }
             if(ssp>0){
        pieDataset.setValue("Solid State Physics",ssp);
             }
             if(CSE>0){
        pieDataset.setValue("Computer Science", CSE);
             }
             if(networking>0)
             {
        pieDataset.setValue("Computer Networking", networking);
             }
             if(ai>0)
             {
        pieDataset.setValue("Artificial Intellegence",ai);
             }
             if(che>0){
        pieDataset.setValue("Chemistry", che);
             }
        JFreeChart chart=ChartFactory.createPieChart("pie chat", pieDataset,true, true, true);
        chart.setBorderPaint(Color.cyan);
        PiePlot p=(PiePlot)chart.getPlot();
        ChartFrame frame=new ChartFrame("pie chart",chart);
        frame.setVisible(true);
        frame.setSize(900,660);
            rs.close();
            st.close();
            //con.close();
        } catch (SQLException ex) {
            //Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        Home obj=new Home();
        obj.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Staticshome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Staticshome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Staticshome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Staticshome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Staticshome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
